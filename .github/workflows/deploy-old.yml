name: deploy-to-ecs
on:
  push:
    branches: [ main ]
jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ap-northeast-2
      ECR_REGISTRY: 742508967962.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPO: my-sample-api
      IMAGE_TAG: ${{ github.sha }}
      CLUSTER_NAME: my-platform-dev-cluster
      SERVICE_NAME: my-platform-dev-svc
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::742508967962:role/GHA_OIDC_ROLE
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push
        run: |
          IMAGE=$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG
          docker build -t $IMAGE ./demo_nginx
          docker push $IMAGE
      - name : Install jq
        run : sudo apt-get update && sudo apt-get install -y jq
      - name : Render task definition
        run : |
          IMAGE="${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG"
          cat taskdef.json | \
            jq --arg IMAGE "$IMAGE" '.containerDefinitions[0].image = $IMAGE' \
            > taskdef-rendered.json
      - name: Update task definition (image tag)
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://taskdef-rendered.json > td.json
          TD_ARN=$(jq -r '.taskDefinition.taskDefinitionArn' td.json)
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition "$TD_ARN" \
            --force-new-deployment
