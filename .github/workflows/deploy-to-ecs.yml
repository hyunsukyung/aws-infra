name: deploy-to-ecs

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}   # 수동 실행도 가능

concurrency:
  group: deploy-to-ecs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-2
      ECR_REGISTRY: 742508967962.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPO: my-sample-api
      # Dockerfile 있는 디렉터리로 바꿔주세요. (예: ./yourls)
      BUILD_CONTEXT: ./yourls

      # YOURLS 버전: Dockerfile ARG로 전달됨
      YOURLS_VERSION: "1.9.3"

      CLUSTER_NAME: my-platform-dev-cluster
      SVC_APP:   my-platform-dev-svc
      SVC_API:   my-platform-dev-svc-api
      SVC_ADMIN: my-platform-dev-svc-admin

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::742508967962:role/GHA_OIDC_ROLE

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push :latest
        run: |
          set -euo pipefail
          IMAGE="${ECR_REGISTRY}/${ECR_REPO}:latest"
          # YOURLS_VERSION이 비어 있어도 기본값(1.9.3)로 안전하게
          YV="${YOURLS_VERSION:-1.9.3}"
          echo "Building $IMAGE from ${BUILD_CONTEXT} (YOURLS_VERSION=$YV)"
          docker build --pull \
            --build-arg YOURLS_VERSION="$YV" \
            -t "$IMAGE" "$BUILD_CONTEXT"
          docker push "$IMAGE"

      - name: Rolling update 3 services
        run: |
          set -euo pipefail
          for SVC in "${SVC_APP}" "${SVC_API}" "${SVC_ADMIN}"; do
            echo "Forcing new deployment: $SVC"
            aws ecs update-service \
              --cluster "${CLUSTER_NAME}" \
              --service "$SVC" \
              --force-new-deployment
          done
          echo "Waiting for services to stabilize..."
          aws ecs wait services-stable \
            --cluster "${CLUSTER_NAME}" \
            --services "${SVC_APP}" "${SVC_API}" "${SVC_ADMIN}"
          echo "All services are stable."
